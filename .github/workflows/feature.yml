name: Build feature branches - disabled

on: 
  push:
    branches:
      # Push events on feature branches
      - 'disable-feature/**'
      - '*disable-feature*'
#   workflow_dispatch:    # Used to trigger from parent projects

env:
  DISPLAY_CONTEXT: ${{ secrets.DISPLAY_CONTEXT }}    # To display github context for debugging

jobs:

  linux-build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      BUILD_NUMBER: ${{ github.run_number }}
      PHASE_ID: f

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Make builder directory
        run: |
          mkdir -p builder

      # Use this to help debug issues
      - name: Dump context
        # See Settings -> Secrets to turn this step on and off
        if: ${{ env.DISPLAY_CONTEXT == 'true' }}
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
          JOB_CONTEXT: ${{ toJSON(job) }}
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: |
          echo "GITHUB CONTEXT:"
          echo
          echo "$GITHUB_CONTEXT"
          echo
          echo "JOB CONTEXT:"
          echo
          echo "$JOB_CONTEXT"
          echo
          echo "STEPS CONTEXT:"
          echo
          echo "$STEPS_CONTEXT"

      - name: Set branch name from github reference
        run: |
          BRANCH_NAME=`basename ${{ github.ref }}`
          echo "BRANCH_NAME: ${BRANCH_NAME}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Download Library artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.KUHLMANNS_TOKEN}}
          workflow: feature.yml
          #branch: develop
          name: version-num-develop-txt
          path: builder
          repo: SKuhlmanns/steves-test-repo

      - name: Download Comm artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.KUHLMANNS_TOKEN}}
          workflow: feature.yml
          #branch: develop
          name: version-num-develop-txt
          path: builder
          repo: SKuhlmanns/steves-test-repo2

      - name: Display contents
        working-directory: builder
        run: |
          ls -l
          cat version_num*.txt
          echo "PHASE ID: ${PHASE_ID}"
          echo "BUILD NUMBER: ${BUILD_NUMBER}"

      - name: Build the application
        working-directory: build
        run: |
          echo "Repo Owner:" ${{ github.repository_owner }}
          echo "Run ID:" ${{ github.run_id }}
          echo ${{ github.run_id }} > run_id-${{ env.BRANCH_NAME }}.txt

          export VER_NUM=`cat version.txt` 
          echo "${VER_NUM}${{ env.PHASE_ID }}-${BUILD_NUMBER}" > version_num_comm.txt
          PHASE_ID=${{ env.PHASE_ID }}
          echo "PHASE ID: ${PHASE_ID}"
          cat version_num*.txt
          bash bbuild.sh .. 

      - name: Upload version.txt artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: version-${{ env.BRANCH_NAME }}-txt
          retention-days: 45
          path: |
            build/version.txt
#            build/version_num_comm.txt

      - name: Upload version_num.txt artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: version-num-${{ env.BRANCH_NAME }}-txt
          retention-days: 45
          path: |
            build/version_num_comm.txt

      - name: Upload run_id artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: run_id-${{ env.BRANCH_NAME }}.txt
          retention-days: 45
          path: |
            build/run_id-${{ env.BRANCH_NAME }}.txt

  # Trigger the downstream project(s)/repos
#  linux-triggers:
#    needs: linux-build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Trigger - steves-test-repo3 event
#        run: |
#          curl -X POST https://api.github.com/repos/SKuhlmanns/steves-test-repo3/actions/workflows/feature.yml/dispatches \
#          -H 'Accept: application/vnd.github.v3+json' \
#          -u ${{ secrets.KUHLMANNS_CURL_TOKEN }} \
#          -d '{"ref":"${{ github.ref }}"}'
